
; Linloader, Boots Linux/ARM on RISC OS based systems.
; Copyright (C) 1999  Timothy Baldwin
;
; This program is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 2 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software
; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

;	$Id: asm.s,v 1.7 1999/07/20 15:00:29 uid1 Exp $

OS_EnterOS	*	&16
XOS_Memory	*	&20068
OS_ConvertHex8	*	&D4
OS_Write0	*	&02
OS_NewLine	*	&03

PAGE_SIZE	*	&1000
V		*	&10000000

p15	CP	15
c0	CN	0
c1	CN	1

	AREA	ASM, CODE, READONLY

	EXPORT	lll_mmu_off
lll_mmu_off
	swi	OS_EnterOS
	mrs	v1, CPSR
	bic	v1, v1, #&DF
	orr	v1, v1, #&D3
	msr	CPSR_all, v1		; Enter SVC32 mode and disable IRQs
	mov	v1, #&30
	mcr	p15, 0, v1, c1, c0	; Turn off MMU
	mov	pc, a1			; Only 2 more insns in pipeline

reserve			RN	6
fixup			RN	7
target			RN	8
arrangement_table	RN	9
page			RN	10
wkspace			RN	12

	MACRO
$L	AVAIL	$A
$L	ldr	r0, [page, $A, LSL #2]
	movs	r5, r0, LSR #13 ; log2(PAGE_SIZE) + 1
	ldrb	r5, [arrangement_table, r5]
	movcs	r5, r5, LSR #4
	tst	r5, #8
	MEND

da_handler_main
	stmfd	r13!, {r1-r11, r14}
	teq	r2, #0
	beq	abort
	add	r11, r1, #8
	ldmia	wkspace, {reserve, fixup, target, arrangement_table, page}
	mov	r0, #7
	mov	r1, arrangement_table
	swi	XOS_Memory
	ldmvsfd	r13!, {r1-r11, r14}
	bvs	eret
loop	AVAIL	target
	blne	dfixup
	add	target, target, #1
	str	r0, [r11], #12
	subs	r2, r2, #1
	bne	loop
	stmia	wkspace, {reserve, fixup, target}
	ldmfd	r13, {r1, r2}
	mov	r0, #&1C00
	swi	XOS_Memory
	ldmfd	r13!, {r1-r11, r14}
	movvc	r0, #0
	bicvc	r14, r14, #V
	orrvs	r14, r14, #V
	msr	CPSR_flg, r14
	mov	pc, r14

dfixup	mov	r1, r0
floop	subs	reserve, reserve, #1
	bcc	abort
	AVAIL	reserve
	bne	floop
	stmia	fixup!, {r0, r1}
	mov	r1, r0
	mov	r0, fixup
	mov	r0, r1
	mov	pc, r14

abort	ldmfd	r13!, {r1-r11, r14}
	mov	r0, #0
eret	orr	r14, r14, #V
	msr	CPSR_flg, r14
	mov	pc, r14

	EXPORT	lll_da_handler_start
	EXPORT	lll_da_handler_end

	LTORG
lll_da_handler_start
	teq	r0, #0
	ldreq	pc, =da_handler_main
	bic	r14, r14, #V
	msr	CPSR_flg, r14
	mov	pc, r14
	LTORG
lll_da_handler_end

	END
