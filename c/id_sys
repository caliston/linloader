/*
 Linloader, Boots Linux/ARM on RISC OS based systems.
 Copyright (C) 1999  Timothy Baldwin

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

/* $Id: id_sys.c,v 1.6 1999/08/11 20:18:30 uid1 Exp $ */

#include "internal.h"
#include <stdio.h>

const int lll_sys_to_linux[] = {-1, -1, -1, 1, 1, 1};

unsigned lll_sys_id;
char *lll_sys_name = 0;
int lll_debug;

void lll_id_sys(void) {
  unsigned mc_id, proc_id, proc_arch;
  int dram_layout_is_riscpc;
  if (lll_sys_id) return;
  if (!lll_pages) lll_check_ram();
  mc_id = lll_get_mc_id();
  lll_sys_id = 0;
  if (mc_id == 0) {
    proc_arch = 2;
    lll_sys_id = 1;
    lll_sys_name = "Archimedies/A5000";
  }
  proc_id = lll_get_proc_id();
  dram_layout_is_riscpc = lll_rpc_bank[0] + lll_rpc_bank[1] + lll_rpc_bank[2] + lll_rpc_bank[3] == lll_pages;
  proc_arch = 3;
  if (mc_id == 0x5B980001 && dram_layout_is_riscpc && lll_rpc_vram_pages == 0) {
    lll_sys_name = "A7000";
    lll_sys_id = 4;
  }
  else if (mc_id == 0xAA7C0001 && dram_layout_is_riscpc && lll_rpc_vram_pages == 0) {
    lll_sys_name = "A7000+";
    lll_sys_id = 5;
  }
  else if (mc_id == 0xD4E70001 && dram_layout_is_riscpc && (lll_rpc_vram_pages == 0 || lll_rpc_vram_pages == 0x100 || lll_rpc_vram_pages == 0x200)) {
    if ((proc_id & 0xFFFFFFF0) == 0x4401A100) {
      lll_sys_name = "StrongARM Risc PC";
      proc_arch = 4;
      lll_sys_id = 3;
    }
    else if ((proc_id & 0xFFF8F000) == 0x41007000) {
      lll_sys_name = "Risc PC 700";
      lll_sys_id = 3;
    }
    else if ((proc_id & 0xFFFFFF00) == 0x41560600) {
      lll_sys_name = "Risc PC 600";
      lll_sys_id = 3;
    }
  }
  if (!lll_sys_name) lll_sys_name = lll_getmsg("lll_unrec");
  if (lll_debug) fprintf(stderr, "lll_sys_name = %s\nlll_sys_id = %i\ndram_layout_is_riscpc = %i\nlll_rpc_vram_pages = %i\nlll_pages = %i\nlll_rpc_bank[] = {%i, %i, %i, %i}\nproc_id = 0x%X\nmc_id = 0x%X\n", lll_sys_name, lll_sys_id, dram_layout_is_riscpc, lll_rpc_vram_pages, lll_pages, lll_rpc_bank[0], lll_rpc_bank[1], lll_rpc_bank[2], lll_rpc_bank[3], proc_id, mc_id);
}
