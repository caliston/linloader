/*
 Linloader, Boots Linux/ARM on RISC OS based systems.
 Copyright (C) 1999  Timothy Baldwin

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

/* $Id: internal.h,v 1.3 1999/07/20 15:01:22 uid1 Exp $ */

#ifndef INTERNAL_H
#define INTERNAL_H

#include <stddef.h>
#include "OS:types.h"

#define PAGE_SIZE 0x1000
#define PAGES 0x100000
#define PARAM_SIZE 0x8000
#define FIXUP_SIZE 0x40000

struct da_handler_control {
  unsigned reserve;
  byte *fixup;
  unsigned target;
  byte *arrangement_table;
  unsigned *page_to_physical;
};

extern struct da_handler_control lll_da_ctrl;
extern unsigned lll_rpc_vram_pages, lll_rpc_bank1_pages, lll_rpc_bank2_pages, lll_pages, lll_fixup_physical_addr, lll_sys_id, lll_initrd_page;
extern const int lll_sys_to_linux[];
extern char *lll_sys_name;
extern int lll_noboot;
extern byte *lll_initrd, *lll_kernel, *lll_params;
extern size_t lll_initrd_size, lll_kernel_size;

extern void lll_mmu_off(unsigned fixup, unsigned archid, unsigned kernel, int page_size);
extern void *lll_xmalloc(size_t size);
extern void lll_die(char const *s, ...);
extern void lll_check_ram(void);
extern unsigned lll_get_proc_id(void);
extern unsigned lll_get_mc_id(void);
extern void lll_id_sys(void);
extern void lll_init(void);
extern void lll_setup_params(char const *commandline);
extern void lll_start_linux(void);

#endif
